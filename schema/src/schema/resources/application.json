{
    "id":"urn:keydap:params:scim:schemas:core:2.0:Application",
    "name":"Application",
    "description":"Metadata of an SSO capable service provider",
    "attributes":[
        {
            "name":"name",
            "type":"string",
            "multiValued":false,
            "description":"Name of the application",
            "required":true,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"server"
        },
        {
            "name":"description",
            "type":"string",
            "multiValued":false,
            "description":"Description of the application",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"active",
            "type":"boolean",
            "multiValued":false,
            "description":"Flag to enable or disable this application",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"secret",
            "type":"string",
            "multiValued":false,
            "description":"Application's secret. Though it is not 'required' server will always set a value",
            "required":false,
            "caseExact":true,
            "mutability":"readWrite",
            "returned":"request",
            "uniqueness":"none"
        },
        {
            "name":"serverSecret",
            "type":"string",
            "multiValued":false,
            "description":"A secret string value used as a key for securing the Application's OAuth codes. Though it is not 'required' server will always set a value",
            "required":false,
            "caseExact":true,
            "mutability":"writeOnly",
            "returned":"never",
            "uniqueness":"none"
        },
        {
            "name":"redirectUri",
            "type":"string",
            "multiValued":false,
            "description":"Application's redirect URI",
            "required":true,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"consentRequired",
            "type":"boolean",
            "multiValued":false,
            "description":"Flag to detect if the consent is required",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"hasQueryInUri",
            "type":"boolean",
            "multiValued":false,
            "description":"Flag to detect if there is query in the URI. This is an internal attribute",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"never",
            "uniqueness":"none"
        },
        {
            "name":"homeUrl",
            "type":"string",
            "multiValued":false,
            "description":"URL of the home page",
            "required":true,
            "caseExact":false,
            "mutability":"writeOnly",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"icon",
            "type":"string",
            "multiValued":false,
            "description":"Icon of the application stored in the format compatible with HTML image's src format e.g 'image/jpeg;base64,/9j...'",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"scopes",
            "type":"complex",
            "multiValued":true,
            "description":"Application's scopes",
            "required":false,
            "subAttributes":[
                {
                    "name":"value",
                    "type":"string",
                    "multiValued":false,
                    "description":"Name of the scope",
                    "required":false,
                    "caseExact":true,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                },
                {
                    "name":"userGroups",
                    "type":"string",
                    "multiValued":true,
                    "description":"The groups whose permissions will be applied before returning the attributes",
                    "required":false,
                    "caseExact":true,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                }
            ],
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"oauthAttributes",
            "type":"complex",
            "multiValued":true,
            "description":"Application's OAuth attributes",
            "required":false,
            "subAttributes":[
                {
                    "name":"value",
                    "type":"string",
                    "multiValued":false,
                    "description":"Name to be used",
                    "required":false,
                    "caseExact":true,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                },
                {
                    "name":"scimExpr",
                    "type":"string",
                    "multiValued":false,
                    "description":"The SCIM expression to get the value",
                    "required":false,
                    "caseExact":true,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                },
                {
                    "name":"staticVal",
                    "type":"string",
                    "multiValued":false,
                    "description":"Static value if any",
                    "required":false,
                    "caseExact":true,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                },
                {
                    "name":"staticMultiValDelim",
                    "type":"string",
                    "multiValued":false,
                    "description":"String using which the static value will be split",
                    "required":false,
                    "caseExact":false,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                }
            ],
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"sloUrl",
            "type":"string",
            "multiValued":false,
            "description":"Single LOgout URL",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"metaUrl",
            "type":"string",
            "multiValued":false,
            "description":"Metadata URL of the application",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"spIssuer",
            "type":"string",
            "multiValued":false,
            "description":"Value of the issuer present in SAMLRequest",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"server"
        },
        {
            "name":"idpIssuer",
            "type":"string",
            "multiValued":false,
            "description":"Value of the issuer present in SAMLResponse",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"needSamlReqSigning",
            "type":"boolean",
            "multiValued":false,
            "description":"Flag to accept only signed SAML requests",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"samlAttributes",
            "type":"complex",
            "multiValued":true,
            "description":"Application's SAML attributes",
            "required":false,
            "subAttributes":[
                {
                    "name":"value",
                    "type":"string",
                    "multiValued":false,
                    "description":"Name to be used",
                    "required":false,
                    "caseExact":true,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                },
                {
                    "name":"format",
                    "type":"string",
                    "multiValued":false,
                    "description":"Format of the attribute",
                    "required":false,
                    "caseExact":true,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                },
                {
                    "name":"scimExpr",
                    "type":"string",
                    "multiValued":false,
                    "description":"The SCIM expression to get the value",
                    "required":false,
                    "caseExact":true,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                },
                {
                    "name":"staticVal",
                    "type":"string",
                    "multiValued":false,
                    "description":"Static value if any",
                    "required":false,
                    "caseExact":true,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                },
                {
                    "name":"staticMultiValDelim",
                    "type":"string",
                    "multiValued":false,
                    "description":"String using which the static value will be split",
                    "required":false,
                    "caseExact":false,
                    "mutability":"readWrite",
                    "returned":"default",
                    "uniqueness":"none"
                }
            ],
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"assertionValidity",
            "type":"integer",
            "multiValued":false,
            "description":"Time in seconds each generated assertion is valid for. Must be greater than 0. Default is 120 seconds",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"tokenValidity",
            "type":"integer",
            "multiValued":false,
            "description":"Time in seconds each generated ID token is valid for. Must be greater than 0. Default is 120 seconds",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"groupIds",
            "type":"string",
            "multiValued":true,
            "description":"IDs of groups whose members are allowed to access this application",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"x509Cert",
            "type":"binary",
            "multiValued":false,
            "description":"The value of an X.509 certificate.",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        },
        {
            "name":"x509PrivKey",
            "type":"binary",
            "multiValued":false,
            "description":"The value of private key corresponding to the X.509 certificate.",
            "required":false,
            "caseExact":false,
            "mutability":"readWrite",
            "returned":"default",
            "uniqueness":"none"
        }
 ],
 "meta":{
        "resourceType":"Schema",
        "location":"/v2/Schemas/urn:keydap:params:scim:schemas:core:2.0:Application"
    }
 }